# torchtitan/models/llama3/train_configs/llama3_1b_deepseek.toml
# 1B preset for 4Ã— RTX 4090 using DeepSeek-V3 tokenizer.
# (Same schema as your 8B file; only values changed where noted.)

[job]
dump_folder = "./outputs"
description = "Llama 3 1B training (DeepSeek tokenizer, 4x4090)"

[profiling]
enable_profiling = false
save_traces_folder = "profile_trace"
profile_freq = 100

[metrics]
log_freq = 10
enable_tensorboard = true
save_tb_folder = "tb"

[model]
name = "llama3"
flavor = "1B"                              # changed from "8B"
hf_assets_path = "./hf_assets/deepseek-v3" # changed from "./assets/hf/Llama-3.1-8B"
# converters = ["float8"]

[optimizer]
name = "AdamW"
lr = 3e-4
eps = 1e-8

[lr_scheduler]
warmup_steps = 10000

[training]
local_batch_size = 2       # was 1; safer start for 24GB cards
seq_len = 4096             # was 8192; reduce to avoid OOM on 4090
max_norm = 1.0
steps = 1000000
dataset = "c4"

[parallelism]
data_parallel_replicate_degree = 1
data_parallel_shard_degree = 4  # was -1 (auto); explicit for 4 GPUs
tensor_parallel_degree = 1
pipeline_parallel_degree = 1
context_parallel_degree = 1

[checkpoint]
enable = true
folder = "checkpoint"
interval = 5000
last_save_model_only = true
export_dtype = "float32"
async_mode = "disabled" # ["disabled", "async", "async_with_pinned_mem"]

[compile]
enable=true
components = ["model", "loss"]

[activation_checkpoint]
mode = "full"
selective_ac_option = "op"  # "int" = ac every positive int layer or 'op', ac based on ops policy

[float8]
enable_fsdp_float8_all_gather = false
precompute_float8_dynamic_scale_for_fsdp = false
filter_fqns = ["output"]

[validation]
enable = false
dataset = "c4_validation"
freq = 500
steps = 1200